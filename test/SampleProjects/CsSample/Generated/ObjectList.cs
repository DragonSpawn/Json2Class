using SimpleJSON;
using System.Collections.Generic;
using Newtonsoft.Json;

/////////////////////////////////////////////////////////////////////////////////////
/* This file is generated by Json2Class (https://github.com/DragonSpawn/Json2Class)*/
/* Modifications to this file will be lost the next time you run the tool.         */
/* Date: 2015-03-08                                                                */
/////////////////////////////////////////////////////////////////////////////////////

namespace Generated
{
    public class ObjectList
    {
        public ObjectList()
        {
            Name = string.Empty;
        }

        public string Name {get; set;}

        public static class SimpleJsonFactory
        {
            public static string ToJson(ObjectList obj)
            {
                var jsonObject = ToJsonObject(obj);
                return jsonObject.ToString();
            }

            public static string ToJson(List<ObjectList> arr)
            {
                var array = new JSONArray();
                foreach (var item in arr)
                {
                    array.Add(ToJsonObject(item));
                }
                return array.ToString();
            }

            public static JSONNode ToJsonObject(ObjectList obj)
            {
                var jsonObject = new JSONClass();
                if (obj.Name != null)
                    jsonObject["name"] = new JSONData(obj.Name);
                return jsonObject;
            }

            public static ObjectList FromJson(string jsonString)
            {
                var jsonObject = JSON.Parse(jsonString);
                return FromJsonObject(jsonObject);
            }

            public static List<ObjectList> FromJsonArray(string jsonArrayString)
            {
                var jsonArray = JSON.Parse(jsonArrayString);
                var result = new List<ObjectList>();
                foreach (JSONNode jsonObject in jsonArray.AsArray)
                {
                    result.Add(FromJsonObject(jsonObject));
                }
                return result;
            }

            public static ObjectList FromJsonObject(JSONNode jsonObject)
            {
                var name = jsonObject["name"].Value ?? "";
                return new ObjectList
                {
                    Name = name,
                };
            }

        }

        public static class NewtonsoftFactory
        {
        }
    }
}

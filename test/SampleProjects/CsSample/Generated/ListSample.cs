using System.Collections.Generic;
using SimpleJSON;
using System.Collections.Generic;

/////////////////////////////////////////////////////////////////////////////////////
/* This file is generated by Json2Class (https://github.com/DragonSpawn/Json2Class)*/
/* Modifications to this file will be lost the next time you run the tool.         */
/* Date: 2015-01-12                                                                */
/////////////////////////////////////////////////////////////////////////////////////

namespace Generated
{
    public class ListSample
    {
        public ListSample()
        {
            IntList = new List<long>();
            FloatList = new List<float>();
            StringList = new List<string>();
            ObjectList = new List<ObjectList>();
        }

        public List<long> IntList {get; set;}
        public List<float> FloatList {get; set;}
        public List<string> StringList {get; set;}
        public List<ObjectList> ObjectList {get; set;}

        public static class SimpleJsonFactory
        {
            public static string ToJson(ListSample obj)
            {
                var jsonObject = ToJsonObject(obj);
                return jsonObject.ToString();
            }

            public static JSONNode ToJsonObject(ListSample obj)
            {
                var jsonObject = new JSONClass();
                if(obj.IntList != null)
                {
                    var intList = new JSONArray();
                    foreach(var item in obj.IntList)
                    {
                        intList.Add(new JSONData(item));
                    }
                    jsonObject["intList"] = intList;
                }
                if(obj.FloatList != null)
                {
                    var floatList = new JSONArray();
                    foreach(var item in obj.FloatList)
                    {
                        floatList.Add(new JSONData(item));
                    }
                    jsonObject["floatList"] = floatList;
                }
                if(obj.StringList != null)
                {
                    var stringList = new JSONArray();
                    foreach(var item in obj.StringList)
                    {
                        stringList.Add(new JSONData(item));
                    }
                    jsonObject["stringList"] = stringList;
                }
                if(obj.ObjectList != null)
                {
                    var objectList = new JSONArray();
                    foreach(var item in obj.ObjectList)
                    {
                        objectList.Add(Generated.ObjectList.SimpleJsonFactory.ToJsonObject(item));
                    }
                    jsonObject["objectList"] = objectList;
                }
                return jsonObject;
            }

            public static ListSample FromJson(string jsonString)
            {
                var jsonObject = JSON.Parse(jsonString);
                return FromJsonObject(jsonObject);
            }

            public static ListSample FromJsonObject(JSONNode jsonObject)
            {
                var intList = new List<long>();
                foreach(JSONNode item in jsonObject["intList"].AsArray)
                {
                    intList.Add(item.AsInt);
                }

                var floatList = new List<float>();
                foreach(JSONNode item in jsonObject["floatList"].AsArray)
                {
                    floatList.Add(item.AsFloat);
                }

                var stringList = new List<string>();
                foreach(JSONNode item in jsonObject["stringList"].AsArray)
                {
                    stringList.Add(item);
                }

                var objectList = new List<ObjectList>();
                foreach(JSONNode item in jsonObject["objectList"].AsArray)
                {
                    objectList.Add(Generated.ObjectList.SimpleJsonFactory.FromJsonObject(item));
                }

                return new ListSample
                {
                    IntList = intList,
                    FloatList = floatList,
                    StringList = stringList,
                    ObjectList = objectList,
                };
            }

        }

        public static class FastJSONFactory
        {
            public static string ToJson(ListSample obj)
            {
                var jsonObject = ToJsonObject(obj);
                return fastJSON.JSON.ToJSON(jsonObject);
            }

            public static Dictionary<string, object> ToJsonObject(ListSample obj)
            {
                var jsonObject = new Dictionary<string, object>();
                if(obj.IntList != null)
                {
                    var intList = new List<long>();
                    foreach(var item in obj.IntList)
                    {
                        intList.Add(item);
                    }
                    jsonObject["intList"] = intList;
                }
                if(obj.FloatList != null)
                {
                    var floatList = new List<float>();
                    foreach(var item in obj.FloatList)
                    {
                        floatList.Add(item);
                    }
                    jsonObject["floatList"] = floatList;
                }
                if(obj.StringList != null)
                {
                    var stringList = new List<string>();
                    foreach(var item in obj.StringList)
                    {
                        stringList.Add(item);
                    }
                    jsonObject["stringList"] = stringList;
                }
                if(obj.ObjectList != null)
                {
                    var objectList = new List<Dictionary<string,object>>();
                    foreach(var item in obj.ObjectList)
                    {
                        objectList.Add(Generated.ObjectList.FastJSONFactory.ToJsonObject(item));
                    }
                    jsonObject["objectList"] = objectList;
                }
                return jsonObject;
            }

            public static ListSample FromJson(string jsonString)
            {
                var jsonObject = (Dictionary<string, object>)fastJSON.JSON.Parse(jsonString);
                return FromJsonObject(jsonObject);
            }

            public static ListSample FromJsonObject(Dictionary<string, object> jsonObject)
            {
                var intList = new List<long>();
                if(jsonObject.ContainsKey("intList"))
                {
                    foreach(long item in jsonObject["intList"] as List<object>)
                    {
                        intList.Add(item);
                    }
                }

                var floatList = new List<float>();
                if(jsonObject.ContainsKey("floatList"))
                {
                    foreach(float item in jsonObject["floatList"] as List<object>)
                    {
                        floatList.Add(item);
                    }
                }

                var stringList = new List<string>();
                if(jsonObject.ContainsKey("stringList"))
                {
                    foreach(string item in jsonObject["stringList"] as List<object>)
                    {
                        stringList.Add(item);
                    }
                }

                var objectList = new List<ObjectList>();
                if(jsonObject.ContainsKey("objectList"))
                {
                    foreach(Dictionary<string,object> item in jsonObject["objectList"] as List<object>)
                    {
                        objectList.Add(Generated.ObjectList.FastJSONFactory.FromJsonObject(item));
                    }
                }

                return new ListSample
                {
                    IntList = intList,
                    FloatList = floatList,
                    StringList = stringList,
                    ObjectList = objectList,
                };
            }

        }
    }
}

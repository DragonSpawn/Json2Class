using System.Collections.Generic;
using SimpleJSON;
using Newtonsoft.Json;

/////////////////////////////////////////////////////////////////////////////////////
/* This file is generated by Json2Class (https://github.com/DragonSpawn/Json2Class)*/
/* Modifications to this file will be lost the next time you run the tool.         */
/* Date: 2015-01-07                                                                */
/////////////////////////////////////////////////////////////////////////////////////

namespace Generated
{
    public class ListSample
    {
        public ListSample()
        {
            IntList = new List<int>();
            FloatList = new List<float>();
            StringList = new List<string>();
            ObjectList = new List<ObjectList>();
        }

        public List<int> IntList {get; set;}
        public List<float> FloatList {get; set;}
        public List<string> StringList {get; set;}
        public List<ObjectList> ObjectList {get; set;}

        public static class SimpleJsonFactory
        {
            public static JSONNode ToJson(ListSample obj)
            {
                var json = new JSONClass();
                var intList = new JSONArray();
                foreach(var item in obj.IntList)
                {
                    intList.Add(new JSONData(item));
                }
                json["intList"] = intList;

                var floatList = new JSONArray();
                foreach(var item in obj.FloatList)
                {
                    floatList.Add(new JSONData(item));
                }
                json["floatList"] = floatList;

                var stringList = new JSONArray();
                foreach(var item in obj.StringList)
                {
                    stringList.Add(new JSONData(item));
                }
                json["stringList"] = stringList;

                var objectList = new JSONArray();
                foreach(var item in obj.ObjectList)
                {
                    objectList.Add(Generated.ObjectList.SimpleJsonFactory.ToJson(item));
                }
                json["objectList"] = objectList;

                return json;
            }

            public static ListSample FromJson(JSONNode json)
            {
                var intList = new List<int>();
                foreach(JSONNode item in json["intList"].AsArray)
                {
                    intList.Add(item.AsInt);
                }

                var floatList = new List<float>();
                foreach(JSONNode item in json["floatList"].AsArray)
                {
                    floatList.Add(item.AsFloat);
                }

                var stringList = new List<string>();
                foreach(JSONNode item in json["stringList"].AsArray)
                {
                    stringList.Add(item);
                }

                var objectList = new List<ObjectList>();
                foreach(JSONNode item in json["objectList"].AsArray)
                {
                    objectList.Add(Generated.ObjectList.SimpleJsonFactory.FromJson(item));
                }

                return new ListSample
                {
                    IntList = intList,
                    FloatList = floatList,
                    StringList = stringList,
                    ObjectList = objectList,
                };
            }

        }

        public static class NewtonsoftFactory
        {
        }
    }
}

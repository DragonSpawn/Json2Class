import json
from glossentry import GlossEntry
#####################################################################################
# This file is generated by Json2Class (https://github.com/DragonSpawn/Json2Class)  #
# Modifications to this file will be lost the next time you run the tool.           #
#                                                                                   #
#####################################################################################


class GlossList(object):
    def __init__(self):
        self._gloss_entry = None

    @property
    def gloss_entry(self):
        """:rtype: GlossEntry"""
        return self._gloss_entry

    @gloss_entry.setter
    def gloss_entry(self, value):
        """:type value: GlossEntry
           :rtype: None"""
        self._gloss_entry = value

    class JsonFactory():
        def __init__(self):
            pass

        @staticmethod
        def to_json(obj):
            """
            Takes an GlossList or a list of GlossList and returns a json string representation of itn            :rtype: str
            """
            return GlossList.JsonFactory.JsonEncoder().encode(obj)

        class JsonEncoder(json.JSONEncoder):
            def default(self, obj):
                if obj is None:
                    return None
                d = {
                    'glossEntry': GlossEntry.JsonFactory.JsonEncoder().default(obj.gloss_entry),
                }
                return d

        @staticmethod
        def from_json_array(json_array):
            """
            :type json_array: list
            :rtype: list of [GlossList]
            """
            result = []
            for obj in json_array:
                result.append(GlossList.JsonFactory.from_json(obj))
            return result

        @staticmethod
        def from_json(json_obj):
            """:type json_obj: dict
               :rtype: GlossList"""
            if json_obj is None:
                return None
            obj = GlossList()

            if "glossEntry" in json_obj:
                obj._gloss_entry = GlossEntry.JsonFactory.from_json(json_obj["glossEntry"])
            return obj


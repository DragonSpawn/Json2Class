package Generated;

import org.json.simple.JSONObject;
import org.json.simple.JSONValue;
import java.util.List;
import java.util.ArrayList;
import org.json.simple.JSONArray;
/***********************************************************************************/
/* This file is generated by Json2Class (https://github.com/DragonSpawn/Json2Class)*/
/* Modifications to this file will be lost the next time you run the tool.         */
/* Date: 2015-03-08                                                                */
/***********************************************************************************/

public class GlossList{
    public GlossList() {
    }
    public GlossEntry glossEntry;

    public static class JsonSimpleFactory
    {
        public static String toJson(GlossList obj) {
            JSONObject json = toJsonObject(obj);
            return json.toString();
        }

        public static String toJson(List<GlossList> list) {
            JSONArray array = new JSONArray();
            for(GlossList obj : list)
            {
                array.add(toJsonObject(obj));
            }
            return array.toString();
        }

        public static JSONObject toJsonObject(GlossList obj) {
            JSONObject json = new JSONObject();
            json.put("glossEntry", obj.glossEntry == null ? null : GlossEntry.JsonSimpleFactory.toJsonObject(obj.glossEntry));
            return json;
        }
        public static GlossList fromJson(String jsonString) {
            JSONObject jsonObject = (JSONObject)JSONValue.parse(jsonString);
            return fromJsonObject(jsonObject);
        }

        public static List<GlossList> fromJsonArray(String jsonArrayString) {
            JSONArray jsonArray = (JSONArray)JSONValue.parse(jsonArrayString);
            List<GlossList> result = new ArrayList<GlossList>();
            for(Object jsonObject : jsonArray)
            {
                result.add(fromJsonObject((JSONObject)jsonObject));
            }
            return result;
        }

        public static GlossList fromJsonObject(JSONObject jsonObject) {
            if(jsonObject == null) {
                return null;
            }
            GlossList obj = new GlossList();
            obj.glossEntry = !jsonObject.containsKey("glossEntry") ? null : GlossEntry.JsonSimpleFactory.fromJsonObject((JSONObject)jsonObject.get("glossEntry"));
            return obj;
        }
    }
}

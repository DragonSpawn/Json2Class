package Generated;

import org.json.simple.JSONObject;
import java.util.List;
import java.util.ArrayList;
import org.json.simple.JSONArray;
/***********************************************************************************/
/* This file is generated by Json2Class (https://github.com/DragonSpawn/Json2Class)*/
/* Modifications to this file will be lost the next time you run the tool.         */
/* Date: 2015-01-10                                                                */
/***********************************************************************************/

public class Person{
    public Person() {
        name = "";
        country = "";
        family = new ArrayList<Person>();
    }
    public String name;
    public int age;
    public String country;
    public List<Person> family;

    public static class JsonSimpleFactory
    {
        public static JSONObject toJson(Person obj) {
            JSONObject json = new JSONObject();
            JSONArray tempArray;
            json.put("name", obj.name);
            json.put("age", obj.age);
            json.put("country", obj.country);

            if(obj.family != null) {
                tempArray = new JSONArray();
                for(Person item : obj.family){
                    tempArray.add(Person.JsonSimpleFactory.toJson(item));
                }
                json.put("family", tempArray);
            }
            return json;
        }
        public static Person fromJson(JSONObject jsonObject) {
            if(jsonObject == null) {
                return null;
            }
            Person obj = new Person();
            if(jsonObject.containsKey("name")) {
                obj.name = (String)jsonObject.get("name");
            }
            if(jsonObject.containsKey("age")) {
                obj.age = (Integer)jsonObject.get("age");
            }
            if(jsonObject.containsKey("country")) {
                obj.country = (String)jsonObject.get("country");
            }
            if(jsonObject.containsKey("family")) {
                obj.family = new ArrayList<Person>();
                for(Object item : (JSONArray)jsonObject.get("family")) {
                    obj.family.add(Person.JsonSimpleFactory.fromJson((JSONObject)item));
                }
            }
            return obj;
        }
    }
}
